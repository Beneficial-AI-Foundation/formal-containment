---
description: 
globs: 
alwaysApply: true
---
# Formal Containment Protocol

This rule describes the formal containment protocol for safely interfacing an AI (oracle) with the outside world using the Model Context Protocol (MCP).

## Protocol Overview

A box is a program that takes a specification and asks a simple agent graph to provide an #imp program that satisfies it and prove that the program is correct with respect to the specification. If the proof is successful, then the code is passed back to the caller tagged with the proof for auditing.

## Implementation 

Implement the containment protocol in Python 3.13 as a `uv` package in the `./fcp` subdirectory. Use type hints. Try to isolate effects, use many small functions. Tool use should import the `Imp` implementation from the lake package in the `./imp` directory. Use `jinja2` templates for prompting if you like. Use the MCP SDK for Python ([mcppy.mdc](mdc:.cursor/rules/mcppy.mdc)). Use a hybrid of MCP best practices and Pydantic data validation. Use prompts and prompt templates from the `./txt` directory.

## References
- See [main.typ](mdc:comms/whitepaper/main.typ) for the full protocol description and example.
- Prerequisites: Hoare triples, MCP standard.
